Olá pessoal! Bem-vindo ao DevForge o seu
canal de desenvolvimento. Meu nome é Alex
Pimenta, e no vídeo de hoje vamos falar
tudo sobre aplicações desktop. Você sabe
o que são é, para que servem? Vem comigo
que eu vou mostrar tudo que você precisa
saber. Neste vídeo eu vou te falar sobre
o conceito de aplicações desktop, as
vantagens e as desvantagens em relação a
outros tipos de aplicativos e dar dicas
práticas para você, que quer desenvolver
ou utilizar esse tipo de aplicação. Ao
final você vai entender como as
aplicações desktop podem ser útiis, e te
ajudar em diversas situações do dia a
dia. Então, você quer entender melhor
sobre tecnologia e como as aplicações
desktop podem facilitar a sua vida? Não
saia daí, continue assistindo e descubra
todo o potencial das aplicações desktop.
Nos vemos depois da
vinheta...
Aplicações desktop, são programas de
software projetados para serem
executados em computadores pessoais ou
notebooks. Diferenciam-se de aplicações
web e mobile por serem instalados
localmente, na máquina do
usuário. Exemplos comuns incluem editores
de textos, planilhas, reprodutores de
mídia e jogos. Oferecem funcionalidades
avançadas e de alta performance, ideal
para tarefas de processamento intensivo
ou acesso a recursos locais. Permitem
trabalhar offline, sem depender de uma
conexão de internet. São mais seguros em
relação a dados sensíveis, uma vez que os
dados são armazenados localmente. Melhor
performance em relação a aplicações web,
especialmente em tarefas que exijam
muito processamento, acesso a recursos do
sistema operacional como sistema de
arquivos e periféricos conectados. Maior
controle sobre interface do usuário e
personalização. Requer instalação e
atualizações manuais, o que pode ser
incômodo para alguns usuários. Não são
tão acessíveis quanto aplicações web, já
que dependem da instalação em cada
máquina. Escolha uma linguagem de
programação. Já dei dicas sobre isso em
outros vídeos no meu canal. Procure!
C#, por exemplo, para Windows Forms ou
WPF, Java com swing ou JavaFX,
Python entre outras linguagens. Design da
interface. Priorize a usabilidade e a
experiência do usuário. Testes. Realize
testes rigorosos para garantir a
estabilidade e a segurança do
usuário. Antes de tudo precisamos
preparar o ambiente e instalar o Visual
Studio. Se já tiver o Visual Studio
instalado, pule para a parte da criação
do aplicativo. Fala galera, tudo bom? Vou
demonstrar aqui a instalação do Visual Studio.
Tá! O que a gente vai fazer? A gente
vai instalar o Visual Studio Community, ele
é gratuito. Tá? Não precisa ser pago. Ele
tem menos recursos que o Visual Studio
Professional. Menos recursos, por exemplo,
que o Enterprise. Mas ele é
suficiente para qualquer
programador. Desenvolver qualquer tipo de
aplicação. Tanto aplicações
Windows, com Windows Forms, quanto pra
WEB, como aplicação para
dispositivos móveis. Vocês vão fazer por
aqui. Tá? Então tudo que eu ensinar para
vocês, daqui pra frente, vai ser através
do Visual Studio. Tanto podemos
desenvolver aplicações, que nem hoje vou
explicar como
desenvolve. Como criar um
pequeno exemplo de uma aplicação Windows
Forms. Mas vamos lá. Vamos instalar o
Visual Studio. Primeiro passo que vamos
fazer. A gente abre aqui,
o Edge. Né!? Pode abrir qualquer
navegador da sua preferência. Tá? Então
faz uma busca aqui,
"Visual Studio Community".
Não importa qual a versão que
você queira. Que você tenha. Versão
mais atual que esteja disponível.
O que importa é que ele vai
mandar para a tela de
baixar a versão gratuita. É o
primeiro link normalmente.
Só clicar aqui. E aqui a gente tem
a página do visual Studio
Community. É uma IDE
gratuita, extensível e completa para
criar aplicativos modernos para Android,
iOS, Windows, bem como aplicativos web e
serviços de nuvens.
Pessoal, essa versão do
Visual Sudio Community, embora seja gratuita,
ela é muito completa. Vocês vão
precisar de uma
versão professional, uma
enterprise,
caso seja
um Tech Leader, alguém que vai ter que
fazer uma análise melhor em relação
ao código. Beleza gente?
Então vamos lá. Vamos a
instalação. Primeira coisa é baixar, depois
de você entrar no site de download dessa
versão, é só clicar em
"Baixar". Ele vai baixar a versão. 
Está baixando já. 
Olha lá! Já está
baixando. Baixou já. Só estou esperando
aqui, ele terminar.
Ok, terminou. Clica ali, dá "Yes", ou "Sim" 
no caso de vocês, não sei como é que tá a
versão do Windows de vocês. Eu vou
minimizar isso aqui, pra gente ver.
Primeira coisa que ele faz, ele mostra o
instalador do visual Studio, antes de
iniciar vai fazer
ajustes em muitas coisas.
Então você poderá configurar sua instalação.
Então vamos lá. Vamos começar. Ele vai
começar a baixar o installer do Visual Studio.
Porque, na verdade, ele baixou um
pequeno aplicativo, para baixar o
instalador. Então esse aqui é o
instalador do Visual Studio. Vamos
maximizar. Esse aqui é o
instalador do Visual Studio. No meu
caso aqui, nesse dia aqui, é o 2022
17.9.4. E aqui ele vai mostrar os pacotes,
os módulos que tem para preparar
o ambiente para você desenvolver.
Determinadas coisas. Então você vai
selecionar o módulo aqui, dependendo do
que você vai precisar desenvolver. Se
você precisar desenvolver
aplicações web,
ASP.Net - tá
vendo? - HTML, JavaScript,
Containers, você adiciona esse cara. 
Se você vai desenvolver pro Azure, você
clica nesse cara. Se você vai desenvolver
Python, você clica nesse cara. Se você vai
desenvolver Node, clica nesse cara. E aqui
embaixo tem desktop e
mobile. Aqui em cima tem Web & Cloud. Então tem
as categorias. Então vamos lá. Pra
categoria cinco aqui.
E aqui ele vai instalar o MAUI. Ok?
Vamos instalar o MAUI.
WPF, vai instalar Windows Forms é esse
aqui.
Annn! Desktop C++, não, não vou trabalhar
com C++, mas se você for
trabalhar com C++, você clica aqui. 
E UWP, desenvolvimento UWP, vamos clicar
também. O UWP, é a evolução do WPF.
Então é isso. Vai desenvolver
para mobile com C++? Não vou. Vai
desenvolver jogos com Unity? Não vou. Você
é um desenvolvedor de Game com C++?
Não. Então é assim. Eu vou selecionar aqui,
os módulos que realmente eu vou precisar
para desenvolver. Para as minhas
necessidades de desenvolvimento, aqui pra
frente. Ahhh! Connect, Develop, and Test Data...
É. Também esse aqui. Ciência de
Dados? Não, não vou fazer. Extensões do
Visual Stúdio? Pode ser.
Não. Share Point não vou. Linux
developer. Também não. Tá? Então
vamos lá.
"Instalar". Você pode instalar enquanto...
Aqui eu tem as opções, tá? Que são: Instalar
enquanto vai baixando, ou instalar tudo
depois que baixar. Não. Vamos
instalando conforme vai baixando.
Bom pessoal. Agora ele vai começar. Ele
vai startar o download, vai começar a
instalar. Eu volto daqui a pouco quando
terminar. Tiver no Finalzinho.
Bom pessoal finalmente
terminou a instalação. Eu esqueci de
falar para vocês que aqui a gente pode,
quer ver uma coisa? Bom. Aqui mostra o que
está instalado. Tá? Eu posso modificar.
Ele vai voltar na parte dos
pacotes, eu posso instalar componentes
separados. Vamos supor que você esteja
trabalhando com Net5, Net6. Tá?
Então você pode escolher aqui, algumas
coisas, como o Net Framework mais antigo, também
você pode selecionar. Opa! Deixa eu voltar
aqui. Tem por categoria, categoria do
Cloud, Database, and Server. Code Tools aqui. Se
eu quiser instalar C++, os
compiladores, e tudo mais. Tem vários
pacotes aqui a mais, tem vários
componentes separados que a gente
pode selecionar e instalar junto. Ok? Isso
pode ser feito antes da instalação ou
pode ser feito depois. É só modificar,
clicar na modificação e selecionar o
o componente que você quiser, aqui
tá? Você pode mudar a linguagem também.
Imagina que você queira o
Visual Studio em Português? Aqui. Eu tô acostumado
com Visual Sudio em Inglês, então eu não gosto do
Visual Studio em Português, então você pode
selecionar aqui o Visual Studio em
Português, que ele vai instalar. E aqui
você diria qual o local que ele ia ser
instalado. Mas tudo bem, já foi feito.
Vamos embora. É isso, fecha tudo. Vamos
abrir o Visual Studio, agora vem aqui
digita Visual
Studio, tem o installer e tem o Visual
Studio que ele instalou mesmo, que é esse
aqui "Visual Studio 2022", quando você
tiver vendo esse vídeo, pode ser que haja
um mais recente. Mas o que eu instalei
agora foi o 2022. Tá? Clica nele, ele vai
abrir a primeira vez.
Ele abre nessa tela aqui,
você pode continuar sem selecionar
nenhum código. Mas é isso.
A instalação do Visual Studio e a
preparação do ambiente é só isso, tá? 
Voltem pro vídeo aí, depois a gente vai
ensinar como criar uma aplicação 
Window Forms. Até mais gente. 
Mas antes do exemplo, preciso falar sobre
algo muito importante. Prometo que será
rapidinho. É sobre algo que vem
transformando a indústria e as vendas,
tornando-as mais eficazes e mais
eficientes. Estou falando de Análise de
Dados ou Data Analytics. E para trabalhar
nessa área, é essencial dominar a
linguagem SQL. Se você domina o SQL, se
abrirão diversas portas para você. Para
desenvolvimento de software, análise de
dados, gerenciamento de banco de dados e
muito mais, tornando-se uma habilidade
valiosa e muito bem remunerada no
mercado de trabalho. Quer contribuir para
melhorar a eficiência e às vendas de
qualquer indústria? Na descrição do vídeo
deixarei um link para meu E-Book: Domine
o SQL, o Guia Definitivo para se Tornar
um Especialista em Banco de Dados.
Voltando ao vídeo. Agora que seu ambiente
já está preparado. Vamos criar um editor
de texto simples. Este editor de texto
terá funcionalidades básicas, como abrir,
editar texto, e salvar. Vamos agora criar
um editor de texto simples com Windows
Forms. Como é que a gente vai fazer? 
A gente vai criar aqui, criar um novo
projeto. Ele vai abrir aqui para mim
todos os projetos, os recentes como
acabei de instalar Visual Studio, não tem
nenhum projeto que eu que eu fiz recente.
Mas a gente pode procurar aqui, Windows
Forms. Uma aplicação Windows Forms a gente
clica aqui, é com C#  que a gente
vai criar. Você pode criar com 
Visual Basic também, eu prefiro a
linguagem C#. Dá Next, vamos dar o nome
pro nosso editor de textos simples.
Vai ser DevForge Edit,
simples assim. Aqui o local, beleza?
Vamos embora, eu tenho só uma opção aqui de
Framework, que a gente instalou. Só o
Net8. Ok? E vamos clicar no "Criar".
Ele vai criar a nossa
aplicação aqui. Ele mostrou aqui, quando
ele abriu a primeira vez,
o que é novo nesse versão.
E vamos lá. Primeira coisa. Ele já
criou aqui o primeiro
formulário, a gente vai excluir
ele. Vamos excluir ele aqui? Não vamos
excluir não, vamos renomear ele.
Vamos dar um "Rename" para ele. Vamos
escrever FormMain, Ok? Formulário
principal, aí ele vai alterar todas as
referências desse esse formulário. Eu
renomeei aqui o meu formulário para FormMain.
A gente só vai ter. Só vamos
ter certeza que ele vai abrir esse
formulário, tá? FormMain. Tá vendo? Ele já
alterou todas as referências. Então como
é que funciona uma aplicação Windows
Form? Funciona da seguinte forma. Ele
vai abrir, quando você executar
ele vai executar o Program, Main, que
mais ou menos parecido com
Console. Só que ele tem essa Tag (Data Annotation)
aqui, que é STAThread, ou seja, é uma Thread Padrão.
Ele inicializa as
configurações da aplicação, e executa o
novo formulário, que é esse
aqui. Esse cara aqui. Abrimos ele aqui.
Aqui do lado eu vou
colocar... deixa eu ver aqui.
Vamos colocar a barra
de ferramentas, barra de
ferramentas. Ok? Barra de ferramentas.
Aqui do lado é onde a gente vai colocar
os nossos controles. Eles
vão ter todos os controles do Windows
Forms. É muito simples pra gente digitar
isso. Aqui a gente vai clicar no F4, que vai
mostrar as propriedades. Eu não gosto das
propriedades desse jeito, eu coloco aqui
no meio as propriedades, vão ficar aqui.
Vão ficar para cá. Deixa eu colocar. Deixa
eu só arrastar lá para cá. E aqui,
quando clica aqui, ele mostra todas as
propriedades da janela. Dessa
janela principal.
O nome dela,
se ela vai poder
aumentar ou não, se ela vai ter um
aumento automático ou não, se ela vai
aumentar automaticamente, o modo de
aumentar automatico e tals, tudo mais.
E aqui embaixo vai ter o texto que vai ali
em cima, eu vou colocar aqui
"DevForgeEdit", apareceu ali em
cima "DevForgeEdit" eu posso até colocar
com espaço aqui, para ficar mais
bonitinho "Devfor Edit". Segunda coisa
é um editor de textos simples, então vai
ter um menu aqui. Deixa eu ver aqui menus
e a gente vai colocar um MenuStrip.
Ele fica aqui em cima. E a gente
vai incluir aqui uma opção do menu
"Arquivo". E embaixo, aqui
embaixo, a gente vai colocar aqui
"Abrir", o próximo vai ser
"Salvar", e o próximo vai
ser "Sair". Então a gente tem três
opções aqui, "Abrir", "Salvar" e
"Sair". Próxima coisa que eu vou
fazer, eu vou colocar
um controle comum aqui, que vai ser um
TextBox. É só arrastar para cá. Ok, temos aqui
um TextBox. Eu quero que ele fique na tela
toda, esse TextBox, o que eu faço para
ficar na tela toda? Eu venho aqui, nas
propriedades. Primeiro vou dar um nome
para ele, que vai ser txtConteúdo.
OK? E eu coloco TXT, para dizer que
é um texto. Ok?
E Size... deixa eu ver
aqui, Dock. Pronto ele pegou
Fill. Ah! Mas ele ficou ali em cima.
Bom. Beleza! Eu acho que ele pegou tudo,
hein!? Não só ficou aqui em
cima...
Ah! Múltiplas linhas, sim. Beleza!
Agora sim, agora eu posso colocar 
múltiplas linhas e o Dock Fill. Agora
eu completo ele totalmente, ele fica na
tela inteira. Então vamos lá.
Outra coisa que eu preciso fazer, eu
preciso criar agora o que vai acontecer
quando eu clicar no botão Abrir, tá clico
duas vezes aqui, ele vai me
criar aqui, ou melhor,
vai permitir que eu digite o código do
abrir, eu já tenho um código pronto aqui.
Só vou colocar aqui. Vou colar. Talvez
eu tenha que mudar o nome. Ah! Eu vou
mudar o nome aqui do
txtConteudo. Já mostrou para mim só
dar um Tab e beleza.
Aqui eu não preciso declarar, eu não
posso, não preciso inicializar...
Já que eu tô dizendo aqui,
estou definindo para ele, qual é o tipo
desse objeto aqui, que é um
StreamReader. Eu não preciso colocar new
StreamReader, posso colocar só o new(). 
Arquivos da TXT.
Aí ele lê o arquivo todo, e coloca
o conteúdo lá, e se der algum problema
vai dar erro ao abrir. Agora a
gente vai colocar o
código de quando clicar no
salvar, o que ele vai fazer. 
txtConteudo.
Opa! txtConteudo. Ok? bom. Aqui é o
seguinte, ele cria uma nova instância
da caixa de diálogo do Save.
beleza. Só new. Da caixa de diálogo save...
Aqui também ele fez a mesma coisa, eu vou
eu vou mostrar uma outra forma de escrever
isso aqui, que ficar bem
melhor, que é uma forma mais moderna. O using
também não precisa ser desse jeito. Tá? O
using, pode ser simplificado desse
jeito. O using também aqui, pode ser
simplificado desse jeito. Aqui. Ok! Ele vai
salvar o arquivo, se der algum
problema na hora de salvar o arquivo,
tem um try-catch, onde vai mostrar que
teve um problema. E agora a gente vai
fazer o código de "Sair". Vem aqui, e vamos
clicar duas vezes no
"Sair". O único código que vai ter aqui, é o
Application.Exit(). Ele vai sair. Eu posso
implementar alguma coisa mais legal
aqui. Que é o seguinte. Vou fixar aqui,
beleza? Fixei vou fixar todos os
nomes. Vou fixar tudo porque tem uma
violação aqui. Tá vendo? Os nomes
dos métodos, têm que começar com
letra maiúscula. Tá, gente? Então como eu
dei o nome com letra minúscula lá,
ele colocou com letra minúscula aqui.
Então, beleza, Tá aqui. Vamos ver se tá
compilando? <shift> + <control> + <B>, está Buildando...
Está compilando... compilou com sucesso.
A gente pode implementar aqui, com mais
coisa, por exemplo eu vou colocar
uma variável "private bool", que vai
ser
"is"
vai
"isModificado", vou misturar um pouco do inglês
com português. Que inicializa como
"false". Ela é falsa. Deixa eu ver se...
Não precisa ser readonly, não.
E aqui é o seguinte, eu vou criar um
evento. Eu vou fazer um "if" aqui
"if"
"isModificado". Então ele vai fazer o
seguinte. É message gente? É MessageBox, tá?
"MessageBox.Show(...)". Agora sim "show". Aí eu
coloco aqui, o que eu quero que apareça,
o texto que eu quero que
apareça: "O texto foi
modificado, quer salvar as modificações?"
E aqui a gente coloca...
O que vai em cima, no título,
"Confirmação". E aqui a gente vai colocar
O MessageBoxButtons
ponto Yes ou No.
Deixa eu ver o que ele tá
falando aqui. Ah! Não é um bool, é um var,
porque ele vai retornar 
um objeto, ele vai trazer
um objeto novo ali, que é um objeto
DialogResult, beleza? E eu verifico aqui
embaixo, se confirma igual a
"Yes", o que que ele vai fazer? Bom gente, é o
seguinte.
Eu posso executar isso aqui, tá? Como é que
eu executo? Executo assim,
beleza,
gente!?
Bom.
Vamos ver se ele vai dar
erro. Eu acho que ele não... bom! Ele
compilou com sucesso, beleza? Compilou com
sucesso. Então ele não deu erro. Se o
usuário confirmar que quer salvar, então ele
vai salvar e depois ele vai sair. Caso
contrário ele só sai. Vamos testar o arquivo?
Vamos testar o programa agora? É só
executar aqui. Vamos lá gente. Testando o
programa. Vamos criar aqui... Vamos
abrir tudo, né!? Editor de texto. É o editor
de texto do modo Light, tá!? Vamos abrir o
arquivo, vamos pegar qualquer documento
aqui, deixa eu ver aqui, "Novo", não
"Notes", "Negativo-Positivo.txt". Vamos lá, clico
duas vezes, é isso Negativo: "desinteresse no
funcionamento...", beleza! Positivo... O lá! Eu dei
um <enter>, tá!? Olha! Não, primeiro vamos fazer o
seguinte, agora ele vai... Ah! Um outro
detalhe, esqueci de fazer um negócio. Vamos
lá, vamos fechar aqui. Eu esqueci de
colocar o evento, de que vai mudar
esse sinal aqui
de...
que vai mudar meu a...
Minha o assistente aqui da Apple
respondeu. Mas vamos
lá, vamos colocar aqui,
nesse cara aqui, no txtConteudo, vamos
nas propriedades.
E aí a gente procura a propriedade de
mudança,
tá? Que vai
ser... ModifiedChanged,
se eu não me engano, é essa aqui.
Então o que a gente vai fazer
quando for feito uma modificação
qualquer? A gente pega ele aqui igual a
"true". Beleza?
Agora aparentemente ele vai funcionar,
vamos lá, vamos testar
aqui. Vamos
testar. Vamos abrir o arquivo
novamente, que é "Negativo-Positivo.txt". Foi esse
arquivo que eu abri? Olha! Quando eu não
altero nada, eu clico em sair, ele
simplesmente fechou o programa.
Ok? Quando vamos abrir, vamos maximizar de
novo, quando eu abrir o arquivo. Vamos
abrir o arquivo de
novo, clico duas vezes aqui, e faço uma
modificação. "Foi feita uma
modificação no texto", vamos ver agora
quando eu clico em "Sair", ele pergunta o
"O texto foi modificado, quer
salvar as modificações?".
"Sim", quero salvar. Ele abriu pois não
tá guardando o nome do arquivo. Mas vamos
lá.
Salvamos! Exatamente! E saiu fora. Agora
vamos ver se a alteração foi feita? Então
vamos lá. "Abrir" o
arquivo, não foi feita a modificação
ou não é esse arquivo. Eu acho que não
era esse arquivo. Deixa eu ver se é
outro
arquivo...
Ah! Esse arquivo
aqui.
Não! É esse arquivo aqui.
Ah! "Foi feita uma modificação...", viu? É isso
gente. E fiquem com o resto do vídeo aí...
Eu espero que vocês tenham aprendido
a criar uma aplicação Windows
Forms. Tá? Não tem segredo, Ok? Sigam esse
roteiro que eu fiz aqui. Eu vou deixar
esse programa no meu Github. Vou
modificar ele para ficar em inglês e vou
colocar no meu Github. Se vocês quiserem
vou deixar o link aqui na descrição. 
Tá pessoal? É isso. Aplicações
Windows Forms, são muito úteis
para windows. Pra Windows, só! Tá? Se
vocês tiverem Linux, Mac, eu vou ensinar
em vídeos mais pra frente, como
desenvolver uma aplicação multi sistema
operacional. Até mais galera.
Continue com o vídeo aí. 
Se gostou do vídeo, deixe o seu like, se inscreva no
canal se não tiver inscrito, e acione o
sininho, para não perder mais vídeos como
esse, e receber a notificação de todos os
vídeos novos que chegarem no canal.
Compartilhe com seus amigos que se
interessam por tecnologia e programação.
E deixe nos comentários o que achou do
vídeo, e se quer ver mais conteúdos como
esse. Obrigado por assistir! Até o próximo
vídeo.
Fui!!!

